---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: schemaregistries.client.sroperator.io
spec:
  group: client.sroperator.io
  names:
    kind: SchemaRegistry
    listKind: SchemaRegistryList
    plural: schemaregistries
    singular: schemaregistry
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The tag of the schema registry
      jsonPath: .spec.image.tag
      name: Tag
      type: string
    - description: The compatibility level of the schema registry
      jsonPath: .spec.compatibilityLevel
      name: Compatibility Level
      type: string
    - description: The number of Coherence Pods for this role
      jsonPath: .spec.replicas
      name: Replicas
      type: integer
    - description: The readiness of the schema registry
      jsonPath: .status.ready
      name: Ready
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SchemaRegistry is the Schema for the schemaregistries API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: SchemaRegistrySpec defines the desired state of SchemaRegistry
            properties:
              compatibilityLevel:
                default: NONE
                description: Used to define the compatibility level of the schema
                  registry, one of NONE (default), BACKWARD, BACKWARD_TRANSITIVE,
                  FORWARD, FORWARD_TRANSITIVE, FULL, FULL_TRANSITIVE
                type: string
              debug:
                default: false
                description: Used to define the debug mode, default is disabled
                type: boolean
              image:
                description: Used to define the version of the schema registry
                properties:
                  pullPolicy:
                    default: IfNotPresent
                    description: Used to define the pull policy, default is IfNotPresent
                    type: string
                  repository:
                    description: Used to define the repository where the image is
                      stored
                    type: string
                  tag:
                    description: Used to define the version of the schema registry
                    type: string
                required:
                - repository
                - tag
                type: object
              ingress:
                default: {}
                description: Used to define the ingress specifications of the schema
                  registry, default is disabled
                properties:
                  enabled:
                    description: Used to define if the ingress is enabled
                    type: boolean
                  host:
                    description: Used to define the host
                    type: string
                  tls:
                    description: Used to define the path to tls certificate
                    properties:
                      certSecretName:
                        description: Used to define the secret name
                        type: string
                    required:
                    - certSecretName
                    type: object
                type: object
              kafkaConfig:
                description: Used to define the Kafka configuration
                properties:
                  authentication:
                    description: Used to define the Kafka authentication
                    properties:
                      saslJaasConfig:
                        description: Used to define the type of authentication
                        properties:
                          valueFrom:
                            description: Used to define the value from the field
                            properties:
                              configMapKeyRef:
                                description: Selects a key of a ConfigMap.
                                properties:
                                  key:
                                    description: The key to select.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap or
                                      its key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                              fieldRef:
                                description: |-
                                  Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                                  spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                                properties:
                                  apiVersion:
                                    description: Version of the schema the FieldPath
                                      is written in terms of, defaults to "v1".
                                    type: string
                                  fieldPath:
                                    description: Path of the field to select in the
                                      specified API version.
                                    type: string
                                required:
                                - fieldPath
                                type: object
                                x-kubernetes-map-type: atomic
                              resourceFieldRef:
                                description: |-
                                  Selects a resource of the container: only resources limits and requests
                                  (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                                properties:
                                  containerName:
                                    description: 'Container name: required for volumes,
                                      optional for env vars'
                                    type: string
                                  divisor:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: Specifies the output format of the
                                      exposed resources, defaults to "1"
                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                    x-kubernetes-int-or-string: true
                                  resource:
                                    description: 'Required: resource to select'
                                    type: string
                                required:
                                - resource
                                type: object
                                x-kubernetes-map-type: atomic
                              secretKeyRef:
                                description: Selects a key of a secret in the pod's
                                  namespace
                                properties:
                                  key:
                                    description: The key of the secret to select from.  Must
                                      be a valid secret key.
                                    type: string
                                  name:
                                    default: ""
                                    description: |-
                                      Name of the referent.
                                      This field is effectively required, but due to backwards compatibility is
                                      allowed to be empty. Instances of this type with an empty value here are
                                      almost certainly wrong.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    type: string
                                  optional:
                                    description: Specify whether the Secret or its
                                      key must be defined
                                    type: boolean
                                required:
                                - key
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                        type: object
                    required:
                    - saslJaasConfig
                    type: object
                  bootstrapServers:
                    description: Used to define the Kafka bootstrap servers
                    items:
                      type: string
                    type: array
                required:
                - authentication
                - bootstrapServers
                type: object
              metrics:
                default: {}
                description: Used to define the metrics specifications of the schema
                  registry, default is disabled
                properties:
                  enabled:
                    description: Used to define if the metrics are enabled
                    type: boolean
                  port:
                    description: Used to define the port
                    format: int32
                    type: integer
                type: object
              port:
                default: 8082
                description: Used to define the port of the schema registry
                format: int32
                type: integer
              replicas:
                default: 1
                description: Used to define the number of replicas
                format: int32
                type: integer
              resources:
                default:
                  limits:
                    cpu: 2000m
                    memory: 2Gi
                  requests:
                    cpu: 1000m
                    memory: 2Gi
                description: The desired compute resource requirements of Pods in
                  the cluster.
                properties:
                  claims:
                    description: |-
                      Claims lists the names of resources, defined in spec.resourceClaims,
                      that are used by this container.

                      This is an alpha field and requires enabling the
                      DynamicResourceAllocation feature gate.

                      This field is immutable. It can only be set for containers.
                    items:
                      description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      properties:
                        name:
                          description: |-
                            Name must match the name of one entry in pod.spec.resourceClaims of
                            the Pod where this field is used. It makes that resource available
                            inside a container.
                          type: string
                        request:
                          description: |-
                            Request is the name chosen for a request in the referenced claim.
                            If empty, everything from the claim is made available, otherwise
                            only the result of this request.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Limits describes the maximum amount of compute resources allowed.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: |-
                      Requests describes the minimum amount of compute resources required.
                      If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                      otherwise to an implementation-defined value. Requests cannot exceed Limits.
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    type: object
                type: object
            required:
            - image
            - kafkaConfig
            type: object
          status:
            description: SchemaRegistryStatus defines the observed state of SchemaRegistry
            properties:
              message:
                description: Used to define the status message of the schema registry
                type: string
              ready:
                description: Used to define if the schema registry is ready
                type: boolean
            required:
            - message
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
